trigger:
- master

pool:
  name: AgentDonalda

variables:
  buildConfiguration: 'Release'

stages:
# ------------------------------
# CI - BUILD & TEST
# ------------------------------
- stage: Build
  displayName: 'Build and Test'
  jobs:
    - job: Build
      steps:
        # Step 1: Checkout code from the repository
        - checkout: self

        # Step 2: Maven Build and Test with Java 21
        - task: Maven@3
          inputs:
            mavenPomFile: 'pom.xml'
            goals: 'clean install'
            options: '-DskipTests=false'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '21'
            mavenVersionOption: 'Default'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'

        # Step 3: SonarCloud Prepare Task
        - task: SonarCloudPrepare@1
          inputs:
            SonarCloud: 'DevOps'  # Replace with the exact service connection name in Azure DevOps
            organization: 'donaldazhuga'
            scannerMode: 'CLI'
            configMode: 'manual'
            cliProjectKey: 'DevOps-Group4'
            cliProjectName: 'DevOps-Group4'
            cliSources: '.'

        # Step 4: SonarCloud Analyze Task
        - task: SonarCloudAnalyze@1
          inputs:
            extraProperties: |
              sonar.verbose=true
              sonar.java.source=21
              sonar.java.target=21

        # Step 5: SonarCloud Publish Quality Gate
        - task: SonarCloudPublish@1
          inputs:
            pollingTimeoutSec: '300'

        # Step 6: Publish Build Artifacts
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: 'target'
            ArtifactName: 'drop'
            publishLocation: 'Container'

# ------------------------------
# CD - DEPLOYMENT
# ------------------------------
- stage: Deliver
  displayName: 'Deliver Artifacts'
  dependsOn: Build
  jobs:
    - job: Deliver
      steps:
        - download: current
          artifact: drop

        - script: echo "Delivering artifact to next stage"
          displayName: 'Mock Deliver Step'

- stage: DeployToDev
  displayName: 'Deploy to Dev Environment'
  dependsOn: Deliver
  jobs:
    - job: DeployDev
      steps:
        - script: |
            echo "Starting Dev Deployment"
            java -jar target/your-app.jar --server.port=8081
          displayName: 'Deploy to Dev Port 8081'

- stage: DeployToQAT
  displayName: 'Deploy to QAT Environment'
  dependsOn: DeployToDev
  jobs:
    - job: DeployQAT
      steps:
        - script: echo "Mock Deployment to QAT"
          displayName: 'Deploy to QAT'

- stage: DeployToStaging
  displayName: 'Deploy to Staging Environment'
  dependsOn: DeployToQAT
  jobs:
    - job: DeployStaging
      steps:
        - script: echo "Mock Deployment to Staging"
          displayName: 'Deploy to Staging'

- stage: DeployToProduction
  displayName: 'Deploy to Production Environment'
  dependsOn: DeployToStaging
  jobs:
    - job: DeployProd
      steps:
        - script: echo "Mock Deployment to Production"
          displayName: 'Deploy to Production'