trigger:
  - master

pool:
  name: AgentDonalda

variables:
  buildConfiguration: 'Release'

stages:
  # ------------------------------
  # CI - BUILD & TEST
  # ------------------------------
  - stage: Build
    displayName: 'Build and Test'
    jobs:
      - job: Build
        steps:
          - checkout: self

          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean install'
              options: '-DskipTests=false'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '21'
              mavenVersionOption: 'Default'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'

          - task: SonarQubePrepare@5
            inputs:
              SonarQube: 'DevOps'  # Make sure this matches your service connection name
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'DevOps-Group4'
              cliProjectName: 'DevOps-Group4'
              cliSources: '.'

          - task: SonarQubeAnalyze@5

          - task: SonarQubePublish@5
            inputs:
              pollingTimeoutSec: '300'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'target'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  # ------------------------------
  # CD - DELIVER ARTIFACT
  # ------------------------------
  - stage: Deliver
    displayName: 'Deliver Artifacts'
    dependsOn: Build
    jobs:
      - job: Deliver
        steps:
          - download: current
            artifact: drop

          - script: echo "Delivering artifact to next stage"
            displayName: 'Mock Deliver Step'

  # ------------------------------
  # CD - DEPLOY TO DEV
  # ------------------------------
  - stage: DeployToDev
    displayName: 'Deploy to Dev Environment'
    dependsOn: Deliver
    jobs:
      - job: DeployDev
        steps:
          - script: |
              echo "Starting Dev Deployment"
              java -jar target/your-app.jar --server.port=8081
            displayName: 'Deploy to Dev Port 8081'

  # ------------------------------
  # CD - DEPLOY TO QAT
  # ------------------------------
  - stage: DeployToQAT
    displayName: 'Deploy to QAT Environment'
    dependsOn: DeployToDev
    jobs:
      - job: DeployQAT
        steps:
          - script: echo "Mock Deployment to QAT"
            displayName: 'Deploy to QAT'

  # ------------------------------
  # CD - DEPLOY TO STAGING
  # ------------------------------
  - stage: DeployToStaging
    displayName: 'Deploy to Staging Environment'
    dependsOn: DeployToQAT
    jobs:
      - job: DeployStaging
        steps:
          - script: echo "Mock Deployment to Staging"
            displayName: 'Deploy to Staging'

  # ------------------------------
  # CD - DEPLOY TO PRODUCTION
  # ------------------------------
  - stage: DeployToProduction
    displayName: 'Deploy to Production Environment'
    dependsOn: DeployToStaging
    jobs:
      - job: DeployProd
        steps:
          - script: echo "Mock Deployment to Production"
            displayName: 'Deploy to Production'
