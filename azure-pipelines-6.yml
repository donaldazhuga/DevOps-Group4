trigger:
- master

variables:
  buildConfiguration: 'Release'
  sonar.projectKey: 'DevOps-Group4'
  sonar.projectName: 'DevOps-Group4'
  sonar.organization: 'donaldazhuga'
  javaVersion: '21'
  mavenVersion: '3.6.3'

stages:
# ------------------------------
# CI - BUILD & TEST
# ------------------------------
- stage: Build
  displayName: 'Build and Test'
  jobs:
    - job: Build
      pool:
        name: AgentDonalda
      steps:
        # Step 1: Checkout code
        - checkout: self
          clean: true
          fetchDepth: 1

        # Step 2: Setup Java (self-hosted agent should have Java 21 pre-installed)
        - script: |
            echo "Using Java from PATH:"
            java -version
            echo "JAVA_HOME: $JAVA_HOME"
          displayName: 'Verify Java Installation'

        # Step 3: Cache Maven dependencies
        - task: Cache@2
          displayName: 'Cache Maven dependencies'
          inputs:
            key: 'maven | "$(Agent.OS)" | pom.xml'
            restoreKeys: |
              maven | "$(Agent.OS)"
            path: '$(USERPROFILE)\.m2\repository'

        # Step 4: Maven Build with SonarCloud Analysis
        - task: Maven@3
          displayName: 'Maven Build with Sonar Analysis'
          inputs:
            mavenPomFile: 'pom.xml'
            goals: 'clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.2182:sonar'
            options: >-
              -DskipTests=false
              -Dsonar.projectKey=$(sonar.projectKey)
              -Dsonar.projectName=$(sonar.projectName)
              -Dsonar.organization=$(sonar.organization)
              -Dsonar.host.url=https://sonarcloud.io
              -Dsonar.login=$(SONAR_TOKEN)
              -Dsonar.java.source=21
              -Dsonar.java.target=21
              -Dsonar.sourceEncoding=UTF-8
              -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
              -Dsonar.junit.reportPaths=target/surefire-reports
              -Dsonar.qualitygate.wait=true
            mavenVersionOption: 'Default'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            mavenAuthenticateFeed: true
          env:
            SONAR_TOKEN: $(sonarCloudToken)

        # Step 5: Publish Build Artifacts
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifacts'
          inputs:
            PathtoPublish: 'target'
            ArtifactName: 'drop'
            publishLocation: 'Container'

# ------------------------------
# CD - DEPLOYMENT
# ------------------------------
- stage: Deliver
  displayName: 'Deliver Artifacts'
  dependsOn: Build
  condition: succeeded()
  jobs:
    - job: Deliver
      pool:
        name: AgentDonalda
      steps:
        - download: current
          artifact: drop
          displayName: 'Download Artifacts'

        - script: echo "Artifacts ready for deployment"
          displayName: 'Verify Artifacts'

- stage: DeployToDev
  displayName: 'Deploy to Dev'
  dependsOn: Deliver
  condition: succeeded()
  jobs:
    - job: DeployDev
      pool:
        name: AgentDonalda
      steps:
        - download: current
          artifact: drop
          displayName: 'Download Artifacts'
        
        - script: |
            echo "Starting Dev Deployment"
            java -jar target/*.jar --server.port=8081 &
            sleep 10
          displayName: 'Run Application'
          env:
            JAVA_HOME: $(JAVA_HOME_21_X64)

- stage: DeployToQAT
  displayName: 'Deploy to QA'
  dependsOn: DeployToDev
  condition: succeeded()
  jobs:
    - job: DeployQAT
      pool:
        name: AgentDonalda
      steps:
        - download: current
          artifact: drop
          displayName: 'Download Artifacts'
        
        - script: |
            echo "Starting QA Deployment" 
            java -jar target/*.jar --server.port=8082 &
            sleep 10
          displayName: 'Run Application'
          env:
            JAVA_HOME: $(JAVA_HOME_21_X64)

- stage: DeployToStaging
  displayName: 'Deploy to Staging'
  dependsOn: DeployToQAT
  condition: succeeded()
  jobs:
    - job: DeployStaging
      pool:
        name: AgentDonalda
      steps:
        - download: current
          artifact: drop
          displayName: 'Download Artifacts'
        
        - script: |
            echo "Starting Staging Deployment"
            java -jar target/*.jar --server.port=8083 &
            sleep 10
          displayName: 'Run Application'
          env:
            JAVA_HOME: $(JAVA_HOME_21_X64)

- stage: DeployToProduction
  displayName: 'Deploy to Production'
  dependsOn: DeployToStaging
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
    - job: DeployProd
      pool:
        name: AgentDonalda
      steps:
        - download: current
          artifact: drop
          displayName: 'Download Artifacts'
        
        - script: |
            echo "Starting Production Deployment"
            java -jar target/*.jar --server.port=8080 &
            sleep 10
          displayName: 'Run Application'
          env:
            JAVA_HOME: $(JAVA_HOME_21_X64)